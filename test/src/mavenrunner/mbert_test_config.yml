---
  maven: /opt/maven
  java:
    # path to your jdks 7 and 8
    home8: /usr/lib/jvm/java-8-openjdk-amd64/
  defects4j:
    # path to where you installed d4j
    containing_dir: ~/code
    # adapt this if needed to point to
    fix_commit_changes_dir: ~/code/mBERTa/mbertnteval/d4jeval/changedlines/csv
  tmp_large_memory:
    # where the d4j repositories will be cloned.
    d4jRepos:  ~/code/mBERTa/tmp/d4j_projects
  exec:
    # set this to true if you want to execute a fresh rerun
    force_reload: False
    # number of mutants to be executed in parallel.
    # This is currently only implemented for projects loaded via -git_url.
    # If you target a local project, the mutants will be tested sequentially.
    max_processes: 4
    # number of processus to pass to pytorch to enhance prediction speed.
    # Make sure to not exceed your maximum number of CPUs.
    torch_processes: 8
    # Keep this to true if you want to include all the business-logic lines of code.
    all_lines: True
    # Turn this to True if you want to remove the comments and javadoc before the mutation.
    no_comments: False
    # Turn this to True if you want to mask the full if conditions.
    mask_full_conditions: False
    # Turn this to True if you want to generate only simple mutants without the condition seeding ones.
    simple_only: True
    # Turn this to true to remove the cloned repo on exit. This is useful when you are conducting a study on remote repositories.
    # Make sure this is False if you are targeting a local repository.
    remove_project_on_exit: False
  # this is where the results will be output.
  output_dir:  ~/code/mBERTa/d4j/output-mbert
...
